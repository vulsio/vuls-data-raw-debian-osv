{
	"schema_version": "1.6.0",
	"id": "CVE-2024-42231",
	"modified": "2024-09-18T03:23:10.076812Z",
	"published": "2024-07-30T08:15:08Z",
	"related": [
		"UBUNTU-CVE-2024-42231",
		"USN-7089-1",
		"USN-7089-2",
		"USN-7089-3",
		"USN-7089-4",
		"USN-7089-5",
		"USN-7089-6",
		"USN-7089-7",
		"USN-7090-1",
		"USN-7095-1"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: fix calc_available_free_space() for zoned mode\n\ncalc_available_free_space() returns the total size of metadata (or\nsystem) block groups, which can be allocated from unallocated disk\nspace. The logic is wrong on zoned mode in two places.\n\nFirst, the calculation of data_chunk_size is wrong. We always allocate\none zone as one chunk, and no partial allocation of a zone. So, we\nshould use zone_size (= data_sinfo->chunk_size) as it is.\n\nSecond, the result \"avail\" may not be zone aligned. Since we always\nallocate one zone as one chunk on zoned mode, returning non-zone size\naligned bytes will result in less pressure on the async metadata reclaim\nprocess.\n\nThis is serious for the nearly full state with a large zone size device.\nAllowing over-commit too much will result in less async reclaim work and\nend up in ENOSPC. We can align down to the zone size to avoid that.",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6.9.9-1"
						}
					]
				}
			],
			"versions": [
				"6.1.106-1",
				"6.1.106-2",
				"6.1.106-3",
				"6.1.27-1",
				"6.1.37-1",
				"6.1.38-1",
				"6.1.38-2",
				"6.1.38-2~bpo11+1",
				"6.1.38-3",
				"6.1.38-4",
				"6.1.38-4~bpo11+1",
				"6.1.52-1",
				"6.1.55-1",
				"6.1.55-1~bpo11+1",
				"6.1.64-1",
				"6.1.66-1",
				"6.1.67-1",
				"6.1.69-1",
				"6.1.69-1~bpo11+1",
				"6.1.76-1",
				"6.1.76-1~bpo11+1",
				"6.1.82-1",
				"6.1.85-1",
				"6.1.90-1",
				"6.1.90-1~bpo11+1",
				"6.1.94-1",
				"6.1.94-1~bpo11+1",
				"6.1.98-1",
				"6.1.99-1",
				"6.3.1-1~exp1",
				"6.3.11-1",
				"6.3.2-1~exp1",
				"6.3.4-1~exp1",
				"6.3.5-1~exp1",
				"6.3.7-1",
				"6.3.7-1~bpo12+1",
				"6.4.1-1~exp1",
				"6.4.11-1",
				"6.4.13-1",
				"6.4.4-1",
				"6.4.4-1~bpo12+1",
				"6.4.4-2",
				"6.4.4-3",
				"6.4.4-3~bpo12+1",
				"6.4~rc6-1~exp1",
				"6.4~rc7-1~exp1",
				"6.5.1-1~exp1",
				"6.5.10-1",
				"6.5.10-1~bpo12+1",
				"6.5.13-1",
				"6.5.3-1",
				"6.5.3-1~bpo12+1",
				"6.5.6-1",
				"6.5.8-1",
				"6.5~rc4-1~exp1",
				"6.5~rc6-1~exp1",
				"6.5~rc7-1~exp1",
				"6.6.11-1",
				"6.6.13-1",
				"6.6.13-1~bpo12+1",
				"6.6.15-1",
				"6.6.15-2",
				"6.6.3-1~exp1",
				"6.6.4-1~exp1",
				"6.6.7-1~exp1",
				"6.6.8-1",
				"6.6.9-1",
				"6.7-1~exp1",
				"6.7.1-1~exp1",
				"6.7.12-1",
				"6.7.12-1~bpo12+1",
				"6.7.4-1~exp1",
				"6.7.7-1",
				"6.7.9-1",
				"6.7.9-2",
				"6.8.11-1",
				"6.8.12-1",
				"6.8.12-1~bpo12+1",
				"6.8.9-1",
				"6.9.2-1~exp1",
				"6.9.7-1",
				"6.9.7-1~bpo12+1",
				"6.9.8-1"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-42231.json"
			}
		}
	],
	"references": [
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/64d2c847ba380e07b9072d65a50aa6469d2aa43f"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/8548903b1999bba02a2b894ad750ab8eb1f40307"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2024-42231"
		}
	]
}
