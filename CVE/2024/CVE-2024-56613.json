{
	"schema_version": "1.6.0",
	"id": "CVE-2024-56613",
	"modified": "2025-01-14T12:18:38.168443Z",
	"published": "2024-12-27T15:15:20Z",
	"related": [
		"UBUNTU-CVE-2024-56613"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/numa: fix memory leak due to the overwritten vma->numab_state\n\n[Problem Description]\nWhen running the hackbench program of LTP, the following memory leak is\nreported by kmemleak.\n\n  # /opt/ltp/testcases/bin/hackbench 20 thread 1000\n  Running with 20*40 (== 800) tasks.\n\n  # dmesg | grep kmemleak\n  ...\n  kmemleak: 480 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n  kmemleak: 665 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n\n  # cat /sys/kernel/debug/kmemleak\n  unreferenced object 0xffff888cd8ca2c40 (size 64):\n    comm \"hackbench\", pid 17142, jiffies 4299780315\n    hex dump (first 32 bytes):\n      ac 74 49 00 01 00 00 00 4c 84 49 00 01 00 00 00  .tI.....L.I.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace (crc bff18fd4):\n      [<ffffffff81419a89>] __kmalloc_cache_noprof+0x2f9/0x3f0\n      [<ffffffff8113f715>] task_numa_work+0x725/0xa00\n      [<ffffffff8110f878>] task_work_run+0x58/0x90\n      [<ffffffff81ddd9f8>] syscall_exit_to_user_mode+0x1c8/0x1e0\n      [<ffffffff81dd78d5>] do_syscall_64+0x85/0x150\n      [<ffffffff81e0012b>] entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  ...\n\nThis issue can be consistently reproduced on three different servers:\n  * a 448-core server\n  * a 256-core server\n  * a 192-core server\n\n[Root Cause]\nSince multiple threads are created by the hackbench program (along with\nthe command argument 'thread'), a shared vma might be accessed by two or\nmore cores simultaneously. When two or more cores observe that\nvma->numab_state is NULL at the same time, vma->numab_state will be\noverwritten.\n\nAlthough current code ensures that only one thread scans the VMAs in a\nsingle 'numa_scan_period', there might be a chance for another thread\nto enter in the next 'numa_scan_period' while we have not gotten till\nnumab_state allocation [1].\n\nNote that the command `/opt/ltp/testcases/bin/hackbench 50 process 1000`\ncannot the reproduce the issue. It is verified with 200+ test runs.\n\n[Solution]\nUse the cmpxchg atomic operation to ensure that only one thread executes\nthe vma->numab_state assignment.\n\n[1] https://lore.kernel.org/lkml/1794be3c-358c-4cdc-a43d-a1f841d91ef7@amd.com/",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6.12.5-1"
						}
					]
				}
			],
			"versions": [
				"6.1.106-1",
				"6.1.106-2",
				"6.1.106-3",
				"6.1.112-1",
				"6.1.115-1",
				"6.1.119-1",
				"6.1.123-1",
				"6.1.124-1",
				"6.1.27-1",
				"6.1.37-1",
				"6.1.38-1",
				"6.1.38-2",
				"6.1.38-2~bpo11+1",
				"6.1.38-3",
				"6.1.38-4",
				"6.1.38-4~bpo11+1",
				"6.1.52-1",
				"6.1.55-1",
				"6.1.55-1~bpo11+1",
				"6.1.64-1",
				"6.1.66-1",
				"6.1.67-1",
				"6.1.69-1",
				"6.1.69-1~bpo11+1",
				"6.1.76-1",
				"6.1.76-1~bpo11+1",
				"6.1.82-1",
				"6.1.85-1",
				"6.1.90-1",
				"6.1.90-1~bpo11+1",
				"6.1.94-1",
				"6.1.94-1~bpo11+1",
				"6.1.98-1",
				"6.1.99-1",
				"6.10-1~exp1",
				"6.10.1-1~exp1",
				"6.10.11-1",
				"6.10.11-1~bpo12+1",
				"6.10.12-1",
				"6.10.3-1",
				"6.10.4-1",
				"6.10.6-1",
				"6.10.6-1~bpo12+1",
				"6.10.7-1",
				"6.10.9-1",
				"6.11-1~exp1",
				"6.11.10-1",
				"6.11.10-1~bpo12+1",
				"6.11.2-1",
				"6.11.4-1",
				"6.11.5-1",
				"6.11.5-1~bpo12+1",
				"6.11.6-1",
				"6.11.7-1",
				"6.11.9-1",
				"6.11~rc4-1~exp1",
				"6.11~rc5-1~exp1",
				"6.12.3-1",
				"6.12~rc6-1~exp1",
				"6.3.1-1~exp1",
				"6.3.11-1",
				"6.3.2-1~exp1",
				"6.3.4-1~exp1",
				"6.3.5-1~exp1",
				"6.3.7-1",
				"6.3.7-1~bpo12+1",
				"6.4.1-1~exp1",
				"6.4.11-1",
				"6.4.13-1",
				"6.4.4-1",
				"6.4.4-1~bpo12+1",
				"6.4.4-2",
				"6.4.4-3",
				"6.4.4-3~bpo12+1",
				"6.4~rc6-1~exp1",
				"6.4~rc7-1~exp1",
				"6.5.1-1~exp1",
				"6.5.10-1",
				"6.5.10-1~bpo12+1",
				"6.5.13-1",
				"6.5.3-1",
				"6.5.3-1~bpo12+1",
				"6.5.6-1",
				"6.5.8-1",
				"6.5~rc4-1~exp1",
				"6.5~rc6-1~exp1",
				"6.5~rc7-1~exp1",
				"6.6.11-1",
				"6.6.13-1",
				"6.6.13-1~bpo12+1",
				"6.6.15-1",
				"6.6.15-2",
				"6.6.3-1~exp1",
				"6.6.4-1~exp1",
				"6.6.7-1~exp1",
				"6.6.8-1",
				"6.6.9-1",
				"6.7-1~exp1",
				"6.7.1-1~exp1",
				"6.7.12-1",
				"6.7.12-1~bpo12+1",
				"6.7.4-1~exp1",
				"6.7.7-1",
				"6.7.9-1",
				"6.7.9-2",
				"6.8.11-1",
				"6.8.12-1",
				"6.8.12-1~bpo12+1",
				"6.8.9-1",
				"6.9.10-1",
				"6.9.10-1~bpo12+1",
				"6.9.11-1",
				"6.9.12-1",
				"6.9.2-1~exp1",
				"6.9.7-1",
				"6.9.7-1~bpo12+1",
				"6.9.8-1",
				"6.9.9-1"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-56613.json"
			}
		}
	],
	"references": [
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/5f1b64e9a9b7ee9cfd32c6b2fab796e29bfed075"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/8f149bcc4d91ac92b32ff4949b291e6ed883dc42"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/a71ddd5b87cda687efa28e049e85e923689bcef9"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2024-56613"
		}
	]
}
