{
	"schema_version": "1.6.0",
	"id": "CVE-2024-47744",
	"modified": "2024-10-22T18:47:36.959660Z",
	"published": "2024-10-21T13:15:04Z",
	"related": [
		"SUSE-SU-2024:3984-1",
		"SUSE-SU-2024:3986-1",
		"SUSE-SU-2024:4387-1",
		"UBUNTU-CVE-2024-47744",
		"openSUSE-SU-2024:14500-1"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Use dedicated mutex to protect kvm_usage_count to avoid deadlock\n\nUse a dedicated mutex to guard kvm_usage_count to fix a potential deadlock\non x86 due to a chain of locks and SRCU synchronizations.  Translating the\nbelow lockdep splat, CPU1 #6 will wait on CPU0 #1, CPU0 #8 will wait on\nCPU2 #3, and CPU2 #7 will wait on CPU1 #4 (if there's a writer, due to the\nfairness of r/w semaphores).\n\n    CPU0                     CPU1                     CPU2\n1   lock(&kvm->slots_lock);\n2                                                     lock(&vcpu->mutex);\n3                                                     lock(&kvm->srcu);\n4                            lock(cpu_hotplug_lock);\n5                            lock(kvm_lock);\n6                            lock(&kvm->slots_lock);\n7                                                     lock(cpu_hotplug_lock);\n8   sync(&kvm->srcu);\n\nNote, there are likely more potential deadlocks in KVM x86, e.g. the same\npattern of taking cpu_hotplug_lock outside of kvm_lock likely exists with\n__kvmclock_cpufreq_notifier():\n\n  cpuhp_cpufreq_online()\n  |\n  -> cpufreq_online()\n     |\n     -> cpufreq_gov_performance_limits()\n        |\n        -> __cpufreq_driver_target()\n           |\n           -> __target_index()\n              |\n              -> cpufreq_freq_transition_begin()\n                 |\n                 -> cpufreq_notify_transition()\n                    |\n                    -> ... __kvmclock_cpufreq_notifier()\n\nBut, actually triggering such deadlocks is beyond rare due to the\ncombination of dependencies and timings involved.  E.g. the cpufreq\nnotifier is only used on older CPUs without a constant TSC, mucking with\nthe NX hugepage mitigation while VMs are running is very uncommon, and\ndoing so while also onlining/offlining a CPU (necessary to generate\ncontention on cpu_hotplug_lock) would be even more unusual.\n\nThe most robust solution to the general cpu_hotplug_lock issue is likely\nto switch vm_list to be an RCU-protected list, e.g. so that x86's cpufreq\nnotifier doesn't to take kvm_lock.  For now, settle for fixing the most\nblatant deadlock, as switching to an RCU-protected list is a much more\ninvolved change, but add a comment in locking.rst to call out that care\nneeds to be taken when walking holding kvm_lock and walking vm_list.\n\n  ======================================================\n  WARNING: possible circular locking dependency detected\n  6.10.0-smp--c257535a0c9d-pip #330 Tainted: G S         O\n  ------------------------------------------------------\n  tee/35048 is trying to acquire lock:\n  ff6a80eced71e0a8 (&kvm->slots_lock){+.+.}-{3:3}, at: set_nx_huge_pages+0x179/0x1e0 [kvm]\n\n  but task is already holding lock:\n  ffffffffc07abb08 (kvm_lock){+.+.}-{3:3}, at: set_nx_huge_pages+0x14a/0x1e0 [kvm]\n\n  which lock already depends on the new lock.\n\n   the existing dependency chain (in reverse order) is:\n\n  -> #3 (kvm_lock){+.+.}-{3:3}:\n         __mutex_lock+0x6a/0xb40\n         mutex_lock_nested+0x1f/0x30\n         kvm_dev_ioctl+0x4fb/0xe50 [kvm]\n         __se_sys_ioctl+0x7b/0xd0\n         __x64_sys_ioctl+0x21/0x30\n         x64_sys_call+0x15d0/0x2e60\n         do_syscall_64+0x83/0x160\n         entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n  -> #2 (cpu_hotplug_lock){++++}-{0:0}:\n         cpus_read_lock+0x2e/0xb0\n         static_key_slow_inc+0x16/0x30\n         kvm_lapic_set_base+0x6a/0x1c0 [kvm]\n         kvm_set_apic_base+0x8f/0xe0 [kvm]\n         kvm_set_msr_common+0x9ae/0xf80 [kvm]\n         vmx_set_msr+0xa54/0xbe0 [kvm_intel]\n         __kvm_set_msr+0xb6/0x1a0 [kvm]\n         kvm_arch_vcpu_ioctl+0xeca/0x10c0 [kvm]\n         kvm_vcpu_ioctl+0x485/0x5b0 [kvm]\n         __se_sys_ioctl+0x7b/0xd0\n         __x64_sys_ioctl+0x21/0x30\n         x64_sys_call+0x15d0/0x2e60\n         do_syscall_64+0x83/0x160\n         entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n  -> #1 (&kvm->srcu){.+.+}-{0:0}:\n         __synchronize_srcu+0x44/0x1a0\n      \n---truncated---",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6.11.2-1"
						}
					]
				}
			],
			"versions": [
				"6.1.106-1",
				"6.1.106-2",
				"6.1.106-3",
				"6.1.112-1",
				"6.1.27-1",
				"6.1.37-1",
				"6.1.38-1",
				"6.1.38-2",
				"6.1.38-2~bpo11+1",
				"6.1.38-3",
				"6.1.38-4",
				"6.1.38-4~bpo11+1",
				"6.1.52-1",
				"6.1.55-1",
				"6.1.55-1~bpo11+1",
				"6.1.64-1",
				"6.1.66-1",
				"6.1.67-1",
				"6.1.69-1",
				"6.1.69-1~bpo11+1",
				"6.1.76-1",
				"6.1.76-1~bpo11+1",
				"6.1.82-1",
				"6.1.85-1",
				"6.1.90-1",
				"6.1.90-1~bpo11+1",
				"6.1.94-1",
				"6.1.94-1~bpo11+1",
				"6.1.98-1",
				"6.1.99-1",
				"6.10-1~exp1",
				"6.10.1-1~exp1",
				"6.10.11-1",
				"6.10.11-1~bpo12+1",
				"6.10.12-1",
				"6.10.3-1",
				"6.10.4-1",
				"6.10.6-1",
				"6.10.6-1~bpo12+1",
				"6.10.7-1",
				"6.10.9-1",
				"6.11-1~exp1",
				"6.11~rc4-1~exp1",
				"6.11~rc5-1~exp1",
				"6.3.1-1~exp1",
				"6.3.11-1",
				"6.3.2-1~exp1",
				"6.3.4-1~exp1",
				"6.3.5-1~exp1",
				"6.3.7-1",
				"6.3.7-1~bpo12+1",
				"6.4.1-1~exp1",
				"6.4.11-1",
				"6.4.13-1",
				"6.4.4-1",
				"6.4.4-1~bpo12+1",
				"6.4.4-2",
				"6.4.4-3",
				"6.4.4-3~bpo12+1",
				"6.4~rc6-1~exp1",
				"6.4~rc7-1~exp1",
				"6.5.1-1~exp1",
				"6.5.10-1",
				"6.5.10-1~bpo12+1",
				"6.5.13-1",
				"6.5.3-1",
				"6.5.3-1~bpo12+1",
				"6.5.6-1",
				"6.5.8-1",
				"6.5~rc4-1~exp1",
				"6.5~rc6-1~exp1",
				"6.5~rc7-1~exp1",
				"6.6.11-1",
				"6.6.13-1",
				"6.6.13-1~bpo12+1",
				"6.6.15-1",
				"6.6.15-2",
				"6.6.3-1~exp1",
				"6.6.4-1~exp1",
				"6.6.7-1~exp1",
				"6.6.8-1",
				"6.6.9-1",
				"6.7-1~exp1",
				"6.7.1-1~exp1",
				"6.7.12-1",
				"6.7.12-1~bpo12+1",
				"6.7.4-1~exp1",
				"6.7.7-1",
				"6.7.9-1",
				"6.7.9-2",
				"6.8.11-1",
				"6.8.12-1",
				"6.8.12-1~bpo12+1",
				"6.8.9-1",
				"6.9.10-1",
				"6.9.10-1~bpo12+1",
				"6.9.11-1",
				"6.9.12-1",
				"6.9.2-1~exp1",
				"6.9.7-1",
				"6.9.7-1~bpo12+1",
				"6.9.8-1",
				"6.9.9-1"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-47744.json"
			}
		}
	],
	"references": [
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/44d17459626052a2390457e550a12cb973506b2f"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/4777225ec89f52bb9ca16a33cfb44c189f1b7b47"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/760a196e6dcb29580e468b44b5400171dae184d8"
		},
		{
			"type": "FIX",
			"url": "https://git.kernel.org/stable/c/a2764afce521fd9fd7a5ff6ed52ac2095873128a"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2024-47744"
		}
	]
}
