{
	"schema_version": "1.6.0",
	"id": "CVE-2022-48815",
	"modified": "2025-01-14T11:18:45.935733Z",
	"published": "2024-07-16T12:15:05Z",
	"related": [
		"SUSE-SU-2024:2894-1",
		"SUSE-SU-2024:2902-1",
		"SUSE-SU-2024:2929-1",
		"SUSE-SU-2024:2939-1",
		"SUSE-SU-2024:2947-1",
		"UBUNTU-CVE-2022-48815"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: bcm_sf2: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() <-\ndevres_release_all() <- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe Starfighter 2 is a platform device, so the initial set of\nconstraints that I thought would cause this (I2C or SPI buses which call\n->remove on ->shutdown) do not apply. But there is one more which\napplies here.\n\nIf the DSA master itself is on a bus that calls ->remove from ->shutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the bcm_sf2 switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe bcm_sf2 driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus.",
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:11",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.10.103-1"
						}
					]
				}
			],
			"versions": [
				"5.10.103-1~bpo10+1",
				"5.10.46-4",
				"5.10.46-5",
				"5.10.70-1",
				"5.10.70-1~bpo10+1",
				"5.10.84-1",
				"5.10.92-1",
				"5.10.92-1~bpo10+1",
				"5.10.92-2"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-48815.json"
			}
		},
		{
			"package": {
				"ecosystem": "Debian:12",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.16.10-1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-48815.json"
			}
		},
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.16.10-1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-48815.json"
			}
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/08e1a3554e99a1a5bd2835907381e2383ee85cae"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/08f1a20822349004bb9cc1b153ecb516e9f2889d"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/2770b795294ed312375c11ef1d0b810499c66b83"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/caabb5f64f5c32fceed93356bb688ef1ec6c5783"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2022-48815"
		}
	]
}
