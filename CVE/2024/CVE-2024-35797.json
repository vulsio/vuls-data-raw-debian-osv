{
	"schema_version": "1.6.0",
	"id": "CVE-2024-35797",
	"modified": "2024-09-18T03:23:04.138867Z",
	"published": "2024-05-17T14:15:11Z",
	"related": [
		"RLSA-2024:6567",
		"RXSA-2024:6567",
		"USN-6816-1",
		"USN-6817-1",
		"USN-6817-2",
		"USN-6817-3",
		"USN-6878-1"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: cachestat: fix two shmem bugs\n\nWhen cachestat on shmem races with swapping and invalidation, there\nare two possible bugs:\n\n1) A swapin error can have resulted in a poisoned swap entry in the\n   shmem inode's xarray. Calling get_shadow_from_swap_cache() on it\n   will result in an out-of-bounds access to swapper_spaces[].\n\n   Validate the entry with non_swap_entry() before going further.\n\n2) When we find a valid swap entry in the shmem's inode, the shadow\n   entry in the swapcache might not exist yet: swap IO is still in\n   progress and we're before __remove_mapping; swapin, invalidation,\n   or swapoff have removed the shadow from swapcache after we saw the\n   shmem swap entry.\n\n   This will send a NULL to workingset_test_recent(). The latter\n   purely operates on pointer bits, so it won't crash - node 0, memcg\n   ID 0, eviction timestamp 0, etc. are all valid inputs - but it's a\n   bogus test. In theory that could result in a false \"recently\n   evicted\" count.\n\n   Such a false positive wouldn't be the end of the world. But for\n   code clarity and (future) robustness, be explicit about this case.\n\n   Bail on get_shadow_from_swap_cache() returning NULL.",
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6.7.12-1"
						}
					]
				}
			],
			"versions": [
				"6.1.106-1",
				"6.1.106-2",
				"6.1.106-3",
				"6.1.27-1",
				"6.1.37-1",
				"6.1.38-1",
				"6.1.38-2",
				"6.1.38-2~bpo11+1",
				"6.1.38-3",
				"6.1.38-4",
				"6.1.38-4~bpo11+1",
				"6.1.52-1",
				"6.1.55-1",
				"6.1.55-1~bpo11+1",
				"6.1.64-1",
				"6.1.66-1",
				"6.1.67-1",
				"6.1.69-1",
				"6.1.69-1~bpo11+1",
				"6.1.76-1",
				"6.1.76-1~bpo11+1",
				"6.1.82-1",
				"6.1.85-1",
				"6.1.90-1",
				"6.1.90-1~bpo11+1",
				"6.1.94-1",
				"6.1.94-1~bpo11+1",
				"6.1.98-1",
				"6.1.99-1",
				"6.3.1-1~exp1",
				"6.3.11-1",
				"6.3.2-1~exp1",
				"6.3.4-1~exp1",
				"6.3.5-1~exp1",
				"6.3.7-1",
				"6.3.7-1~bpo12+1",
				"6.4.1-1~exp1",
				"6.4.11-1",
				"6.4.13-1",
				"6.4.4-1",
				"6.4.4-1~bpo12+1",
				"6.4.4-2",
				"6.4.4-3",
				"6.4.4-3~bpo12+1",
				"6.4~rc6-1~exp1",
				"6.4~rc7-1~exp1",
				"6.5.1-1~exp1",
				"6.5.10-1",
				"6.5.10-1~bpo12+1",
				"6.5.13-1",
				"6.5.3-1",
				"6.5.3-1~bpo12+1",
				"6.5.6-1",
				"6.5.8-1",
				"6.5~rc4-1~exp1",
				"6.5~rc6-1~exp1",
				"6.5~rc7-1~exp1",
				"6.6.11-1",
				"6.6.13-1",
				"6.6.13-1~bpo12+1",
				"6.6.15-1",
				"6.6.15-2",
				"6.6.3-1~exp1",
				"6.6.4-1~exp1",
				"6.6.7-1~exp1",
				"6.6.8-1",
				"6.6.9-1",
				"6.7-1~exp1",
				"6.7.1-1~exp1",
				"6.7.12-1~bpo12+1",
				"6.7.4-1~exp1",
				"6.7.7-1",
				"6.7.9-1",
				"6.7.9-2"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-35797.json"
			}
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/24a0e73d544439bb9329fbbafac44299e548a677"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/b79f9e1ff27c994a4c452235ba09e672ec698e23"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/d5d39c707a4cf0bcc84680178677b97aa2cb2627"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/d962f6c583458037dc7e529659b2b02b9dd3d94b"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2024-35797"
		}
	]
}
