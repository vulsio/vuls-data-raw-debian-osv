{
	"schema_version": "1.6.0",
	"id": "CVE-2024-31210",
	"modified": "2025-02-09T18:01:05.572152Z",
	"published": "2024-04-04T23:15:16Z",
	"aliases": [
		"BIT-wordpress-2024-31210",
		"BIT-wordpress-multisite-2024-31210"
	],
	"related": [
		"DSA-5685-1",
		"GHSA-x79f-xrjv-jx5r",
		"UBUNTU-CVE-2024-31210"
	],
	"details": "WordPress is an open publishing platform for the Web. It's possible for a file of a type other than a zip file to be submitted as a new plugin by an administrative user on the Plugins -> Add New -> Upload Plugin screen in WordPress. If FTP credentials are requested for installation (in order to move the file into place outside of the `uploads` directory) then the uploaded file remains temporary available in the Media Library despite it not being allowed. If the `DISALLOW_FILE_EDIT` constant is set to `true` on the site _and_ FTP credentials are required when uploading a new theme or plugin, then this technically allows an RCE when the user would otherwise have no means of executing arbitrary PHP code. This issue _only_ affects Administrator level users on single site installations, and Super Admin level users on Multisite installations where it's otherwise expected that the user does not have permission to upload or execute arbitrary PHP code. Lower level users are not affected. Sites where the `DISALLOW_FILE_MODS` constant is set to `true` are not affected. Sites where an administrative user either does not need to enter FTP credentials or they have access to the valid FTP credentials, are not affected. The issue was fixed in WordPress 6.4.3 on January 30, 2024 and backported to versions 6.3.3, 6.2.4, 6.1.5, 6.0.7, 5.9.9, 5.8.9, 5.7.11, 5.6.13, 5.5.14, 5.4.15, 5.3.17, 5.2.20, 5.1.18, 5.0.21, 4.9.25, 2.8.24, 4.7.28, 4.6.28, 4.5.31, 4.4.32, 4.3.33, 4.2.37, and 4.1.40. A workaround is available. If the `DISALLOW_FILE_MODS` constant is defined as `true` then it will not be possible for any user to upload a plugin and therefore this issue will not be exploitable.\n",
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:11",
				"name": "wordpress",
				"purl": "pkg:deb/debian/wordpress?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.7.11+dfsg1-0+deb11u1"
						}
					]
				}
			],
			"versions": [
				"5.7.1+dfsg1-2",
				"5.7.3+dfsg1-0+deb11u1",
				"5.7.5+dfsg1-0+deb11u1",
				"5.7.8+dfsg1-0+deb11u1",
				"5.7.8+dfsg1-0+deb11u2"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-31210.json"
			}
		},
		{
			"package": {
				"ecosystem": "Debian:12",
				"name": "wordpress",
				"purl": "pkg:deb/debian/wordpress?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "6.1.6+dfsg1-0+deb12u1"
						}
					]
				}
			],
			"versions": [
				"6.1.1+dfsg1-1"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-31210.json"
			}
		}
	],
	"references": [
		{
			"type": "ADVISORY",
			"url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-x79f-xrjv-jx5r"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2024-31210"
		}
	]
}
