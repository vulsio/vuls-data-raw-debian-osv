{
	"schema_version": "1.6.0",
	"id": "CVE-2021-47094",
	"modified": "2024-09-18T03:17:19.039585Z",
	"published": "2024-03-04T18:15:07Z",
	"related": [
		"SUSE-SU-2024:1320-1",
		"SUSE-SU-2024:1321-1",
		"SUSE-SU-2024:1466-1",
		"SUSE-SU-2024:1480-1",
		"SUSE-SU-2024:1490-1",
		"UBUNTU-CVE-2021-47094"
	],
	"details": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: Don't advance iterator after restart due to yielding\n\nAfter dropping mmu_lock in the TDP MMU, restart the iterator during\ntdp_iter_next() and do not advance the iterator.  Advancing the iterator\nresults in skipping the top-level SPTE and all its children, which is\nfatal if any of the skipped SPTEs were not visited before yielding.\n\nWhen zapping all SPTEs, i.e. when min_level == root_level, restarting the\niter and then invoking tdp_iter_next() is always fatal if the current gfn\nhas as a valid SPTE, as advancing the iterator results in try_step_side()\nskipping the current gfn, which wasn't visited before yielding.\n\nSprinkle WARNs on iter->yielded being true in various helpers that are\noften used in conjunction with yielding, and tag the helper with\n__must_check to reduce the probabily of improper usage.\n\nFailing to zap a top-level SPTE manifests in one of two ways.  If a valid\nSPTE is skipped by both kvm_tdp_mmu_zap_all() and kvm_tdp_mmu_put_root(),\nthe shadow page will be leaked and KVM will WARN accordingly.\n\n  WARNING: CPU: 1 PID: 3509 at arch/x86/kvm/mmu/tdp_mmu.c:46 [kvm]\n  RIP: 0010:kvm_mmu_uninit_tdp_mmu+0x3e/0x50 [kvm]\n  Call Trace:\n   <TASK>\n   kvm_arch_destroy_vm+0x130/0x1b0 [kvm]\n   kvm_destroy_vm+0x162/0x2a0 [kvm]\n   kvm_vcpu_release+0x34/0x60 [kvm]\n   __fput+0x82/0x240\n   task_work_run+0x5c/0x90\n   do_exit+0x364/0xa10\n   ? futex_unqueue+0x38/0x60\n   do_group_exit+0x33/0xa0\n   get_signal+0x155/0x850\n   arch_do_signal_or_restart+0xed/0x750\n   exit_to_user_mode_prepare+0xc5/0x120\n   syscall_exit_to_user_mode+0x1d/0x40\n   do_syscall_64+0x48/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nIf kvm_tdp_mmu_zap_all() skips a gfn/SPTE but that SPTE is then zapped by\nkvm_tdp_mmu_put_root(), KVM triggers a use-after-free in the form of\nmarking a struct page as dirty/accessed after it has been put back on the\nfree list.  This directly triggers a WARN due to encountering a page with\npage_count() == 0, but it can also lead to data corruption and additional\nerrors in the kernel.\n\n  WARNING: CPU: 7 PID: 1995658 at arch/x86/kvm/../../../virt/kvm/kvm_main.c:171\n  RIP: 0010:kvm_is_zone_device_pfn.part.0+0x9e/0xd0 [kvm]\n  Call Trace:\n   <TASK>\n   kvm_set_pfn_dirty+0x120/0x1d0 [kvm]\n   __handle_changed_spte+0x92e/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   zap_gfn_range+0x549/0x620 [kvm]\n   kvm_tdp_mmu_put_root+0x1b6/0x270 [kvm]\n   mmu_free_root_page+0x219/0x2c0 [kvm]\n   kvm_mmu_free_roots+0x1b4/0x4e0 [kvm]\n   kvm_mmu_unload+0x1c/0xa0 [kvm]\n   kvm_arch_destroy_vm+0x1f2/0x5c0 [kvm]\n   kvm_put_kvm+0x3b1/0x8b0 [kvm]\n   kvm_vcpu_release+0x4e/0x70 [kvm]\n   __fput+0x1f7/0x8c0\n   task_work_run+0xf8/0x1a0\n   do_exit+0x97b/0x2230\n   do_group_exit+0xda/0x2a0\n   get_signal+0x3be/0x1e50\n   arch_do_signal_or_restart+0x244/0x17f0\n   exit_to_user_mode_prepare+0xcb/0x120\n   syscall_exit_to_user_mode+0x1d/0x40\n   do_syscall_64+0x4d/0x90\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nNote, the underlying bug existed even before commit 1af4a96025b3 (\"KVM:\nx86/mmu: Yield in TDU MMU iter even if no SPTES changed\") moved calls to\ntdp_mmu_iter_cond_resched() to the beginning of loops, as KVM could still\nincorrectly advance past a top-level entry when yielding on a lower-level\nentry.  But with respect to leaking shadow pages, the bug was introduced\nby yielding before processing the current gfn.\n\nAlternatively, tdp_mmu_iter_cond_resched() could simply fall through, or\ncallers could jump to their \"retry\" label.  The downside of that approach\nis that tdp_mmu_iter_cond_resched() _must_ be called before anything else\nin the loop, and there's no easy way to enfornce that requirement.\n\nIdeally, KVM would handling the cond_resched() fully within the iterator\nmacro (the code is actually quite clean) and avoid this entire class of\nbugs, but that is extremely difficult do wh\n---truncated---",
	"affected": [
		{
			"package": {
				"ecosystem": "Debian:11",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						}
					]
				}
			],
			"versions": [
				"5.10.103-1",
				"5.10.103-1~bpo10+1",
				"5.10.106-1",
				"5.10.113-1",
				"5.10.120-1",
				"5.10.120-1~bpo10+1",
				"5.10.127-1",
				"5.10.127-2",
				"5.10.127-2~bpo10+1",
				"5.10.136-1",
				"5.10.140-1",
				"5.10.148-1",
				"5.10.149-1",
				"5.10.149-2",
				"5.10.158-1",
				"5.10.158-2",
				"5.10.162-1",
				"5.10.178-1",
				"5.10.178-2",
				"5.10.178-3",
				"5.10.179-1",
				"5.10.179-2",
				"5.10.179-3",
				"5.10.179-4",
				"5.10.179-5",
				"5.10.191-1",
				"5.10.197-1",
				"5.10.205-1",
				"5.10.205-2",
				"5.10.209-1",
				"5.10.209-2",
				"5.10.216-1",
				"5.10.218-1",
				"5.10.221-1",
				"5.10.223-1",
				"5.10.46-4",
				"5.10.46-5",
				"5.10.70-1",
				"5.10.70-1~bpo10+1",
				"5.10.84-1",
				"5.10.92-1",
				"5.10.92-1~bpo10+1",
				"5.10.92-2",
				"5.13.12-1~exp1",
				"5.13.9-1~exp1",
				"5.13.9-1~exp2",
				"5.14-1~exp1",
				"5.14-1~exp2",
				"5.14.1-1~exp1",
				"5.14.12-1",
				"5.14.16-1",
				"5.14.2-1~exp1",
				"5.14.3-1~exp1",
				"5.14.6-1",
				"5.14.6-2",
				"5.14.6-3",
				"5.14.9-1",
				"5.14.9-2",
				"5.14.9-2~bpo11+1",
				"5.15-1~exp1",
				"5.15.1-1~exp1",
				"5.15.15-1",
				"5.15.15-2",
				"5.15.15-2~bpo11+1",
				"5.15.2-1~exp1",
				"5.15.3-1",
				"5.15.5-1",
				"5.15.5-2",
				"5.15.5-2~bpo11+1",
				"5.16.10-1",
				"5.16.11-1",
				"5.16.11-1~bpo11+1",
				"5.16.12-1",
				"5.16.12-1~bpo11+1",
				"5.16.14-1",
				"5.16.18-1",
				"5.16.3-1~exp1",
				"5.16.4-1~exp1",
				"5.16.7-1",
				"5.16.7-2",
				"5.16~rc1-1~exp1",
				"5.16~rc3-1~exp1",
				"5.16~rc4-1~exp1",
				"5.16~rc5-1~exp1",
				"5.16~rc6-1~exp1",
				"5.16~rc7-1~exp1",
				"5.16~rc8-1~exp1",
				"5.17.1-1~exp1",
				"5.17.11-1",
				"5.17.3-1",
				"5.17.6-1",
				"5.17~rc3-1~exp1",
				"5.17~rc4-1~exp1",
				"5.17~rc5-1~exp1",
				"5.17~rc6-1~exp1",
				"5.17~rc7-1~exp1",
				"5.17~rc8-1~exp1",
				"5.18-1~exp1",
				"5.18.14-1",
				"5.18.14-1~bpo11+1",
				"5.18.16-1",
				"5.18.16-1~bpo11+1",
				"5.18.2-1",
				"5.18.2-1~bpo11+1",
				"5.18.5-1",
				"5.19-1~exp1",
				"5.19.11-1",
				"5.19.11-1~bpo11+1",
				"5.19.6-1",
				"5.19~rc4-1~exp1",
				"5.19~rc6-1~exp1",
				"6.0-1~exp1",
				"6.0.10-1",
				"6.0.10-2",
				"6.0.12-1",
				"6.0.12-1+alpha",
				"6.0.12-1~bpo11+1",
				"6.0.2-1",
				"6.0.3-1",
				"6.0.3-1~bpo11+1",
				"6.0.5-1",
				"6.0.6-1",
				"6.0.6-2",
				"6.0.7-1",
				"6.0.8-1",
				"6.0~rc7-1~exp1",
				"6.1.1-1~exp1",
				"6.1.1-1~exp2",
				"6.1.106-1",
				"6.1.106-2",
				"6.1.106-3",
				"6.1.11-1",
				"6.1.12-1",
				"6.1.12-1~bpo11+1",
				"6.1.15-1",
				"6.1.15-1~bpo11+1",
				"6.1.2-1~exp1",
				"6.1.20-1",
				"6.1.20-1~bpo11+1",
				"6.1.20-2",
				"6.1.20-2~bpo11+1",
				"6.1.25-1",
				"6.1.27-1",
				"6.1.27-1~bpo11+1",
				"6.1.37-1",
				"6.1.38-1",
				"6.1.38-2",
				"6.1.38-2~bpo11+1",
				"6.1.38-3",
				"6.1.38-4",
				"6.1.38-4~bpo11+1",
				"6.1.4-1",
				"6.1.52-1",
				"6.1.55-1",
				"6.1.55-1~bpo11+1",
				"6.1.64-1",
				"6.1.66-1",
				"6.1.67-1",
				"6.1.69-1",
				"6.1.69-1~bpo11+1",
				"6.1.7-1",
				"6.1.76-1",
				"6.1.76-1~bpo11+1",
				"6.1.8-1",
				"6.1.8-1+sh4",
				"6.1.82-1",
				"6.1.85-1",
				"6.1.90-1",
				"6.1.90-1~bpo11+1",
				"6.1.94-1",
				"6.1.94-1~bpo11+1",
				"6.1.98-1",
				"6.1.99-1",
				"6.10-1~exp1",
				"6.10.1-1~exp1",
				"6.10.3-1",
				"6.10.4-1",
				"6.10.6-1",
				"6.10.6-1~bpo12+1",
				"6.10.7-1",
				"6.10.9-1",
				"6.11~rc4-1~exp1",
				"6.11~rc5-1~exp1",
				"6.1~rc3-1~exp1",
				"6.1~rc5-1~exp1",
				"6.1~rc6-1~exp1",
				"6.1~rc7-1~exp1",
				"6.1~rc8-1~exp1",
				"6.3.1-1~exp1",
				"6.3.11-1",
				"6.3.2-1~exp1",
				"6.3.4-1~exp1",
				"6.3.5-1~exp1",
				"6.3.7-1",
				"6.3.7-1~bpo12+1",
				"6.4.1-1~exp1",
				"6.4.11-1",
				"6.4.13-1",
				"6.4.4-1",
				"6.4.4-1~bpo12+1",
				"6.4.4-2",
				"6.4.4-3",
				"6.4.4-3~bpo12+1",
				"6.4~rc6-1~exp1",
				"6.4~rc7-1~exp1",
				"6.5.1-1~exp1",
				"6.5.10-1",
				"6.5.10-1~bpo12+1",
				"6.5.13-1",
				"6.5.3-1",
				"6.5.3-1~bpo12+1",
				"6.5.6-1",
				"6.5.8-1",
				"6.5~rc4-1~exp1",
				"6.5~rc6-1~exp1",
				"6.5~rc7-1~exp1",
				"6.6.11-1",
				"6.6.13-1",
				"6.6.13-1~bpo12+1",
				"6.6.15-1",
				"6.6.15-2",
				"6.6.3-1~exp1",
				"6.6.4-1~exp1",
				"6.6.7-1~exp1",
				"6.6.8-1",
				"6.6.9-1",
				"6.7-1~exp1",
				"6.7.1-1~exp1",
				"6.7.12-1",
				"6.7.12-1~bpo12+1",
				"6.7.4-1~exp1",
				"6.7.7-1",
				"6.7.9-1",
				"6.7.9-2",
				"6.8.11-1",
				"6.8.12-1",
				"6.8.12-1~bpo12+1",
				"6.8.9-1",
				"6.9.10-1",
				"6.9.10-1~bpo12+1",
				"6.9.11-1",
				"6.9.12-1",
				"6.9.2-1~exp1",
				"6.9.7-1",
				"6.9.7-1~bpo12+1",
				"6.9.8-1",
				"6.9.9-1"
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-47094.json"
			}
		},
		{
			"package": {
				"ecosystem": "Debian:12",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.15.15-1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-47094.json"
			}
		},
		{
			"package": {
				"ecosystem": "Debian:13",
				"name": "linux",
				"purl": "pkg:deb/debian/linux?arch=source"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "5.15.15-1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"urgency": "not yet assigned"
			},
			"database_specific": {
				"source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-47094.json"
			}
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/3a0f64de479cae75effb630a2e0a237ca0d0623c"
		},
		{
			"type": "WEB",
			"url": "https://git.kernel.org/stable/c/d884eefd75cc54887bc2e9e724207443525dfb2c"
		},
		{
			"type": "ADVISORY",
			"url": "https://security-tracker.debian.org/tracker/CVE-2021-47094"
		}
	]
}
